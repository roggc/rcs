import '../../use-sync-external-store/shim/index.js';
import { w as withSelectorExports } from '../../use-sync-external-store/shim/with-selector.js';
import { r as reactDomExports } from '../../react-dom/index.js';
import { setBatch } from './utils/batch.js';
import { initializeUseSelector } from './hooks/useSelector.js';
export { createSelectorHook } from './hooks/useSelector.js';
import '../../hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js';
import '../../react/index.js';
import '../../react-is/index.js';

// The primary entry point assumes we're working with standard ReactDOM/RN, but
// older versions that do not include `useSyncExternalStore` (React 16.9 - 17.x).
// Because of that, the useSyncExternalStore compat shim is needed.
initializeUseSelector(withSelectorExports.useSyncExternalStoreWithSelector);
// with standard React renderers (ReactDOM, React Native)

setBatch(reactDomExports.unstable_batchedUpdates);

var unstable_batchedUpdates = reactDomExports.unstable_batchedUpdates;
export { unstable_batchedUpdates as batch };
